{{- $fullName := include "CHARTNAME.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "CHARTNAME.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "CHARTNAME.selectorLabels" . | nindent 6 }}
  {{- if and .Values.strategy .Values.strategy.type }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if and .Values.strategy.rollingUpdate (eq .Values.strategy.type "RollingUpdate") }}
    rollingUpdate:
      {{- .Values.strategy.rollingUpdate | toYaml | nindent 6 }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "CHARTNAME.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "CHARTNAME.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if and .Values.global .Values.global.versions (index .Values.global.versions "CHARTNAME") }}
          image: "{{ .Values.image.repository }}:{{ index .Values.global.versions "CHARTNAME" }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "helpers.list-env-variables" . | indent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if and .Values.probes .Values.probes.livenessPath }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessPath }}
              port: http
          {{- end }}
          {{- if and .Values.probes .Values.probes.readinessPath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessPath }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.pvc }}
          volumeMounts:
            {{- range $pvcName, $pvc := . }}
            {{- range $mount := $pvc.mounts }}
            - name: {{ $pvcName }}
              mountPath: {{ $mount.mountPath | quote }}
              {{- if $mount.subPath }}
              {{- if contains "$(" $mount.subPath }}
              subPathExpr: {{ $mount.subPath | quote }}
              {{- else }}
              subPath: {{ $mount.subPath | quote }}
              {{- end }}
              {{- end }}
              {{- if $mount.readOnly }}
              readOnly: {{ $mount.readOnly }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
      {{- with .Values.pvc }}
      volumes:
        {{- range $pvcName, $pvc := . }}
        - name: {{ $pvcName }}
          {{- if .hostPath }}
          hostPath:
            {{- toYaml .hostPath | nindent 12 }}
          {{- else if .emptyDir }}
          emptyDir:
            {{- toYaml .emptyDir | nindent 12 }}
          {{- else if (dig "enabled" true $pvc) }}
          persistentVolumeClaim:
            claimName: {{ default (printf "%s-%s" $fullName $pvcName) .existingClaim }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
